version: "3"
services:
  #
  # Jobs
  #

  build-x86_64-unknown-linux-musl:
    build:
      context: .
      dockerfile: scripts/ci-docker-images/builder-x86_64-unknown-linux-musl/Dockerfile
    environment:
      NATIVE_BUILD: "false"
      TARGET: x86_64-unknown-linux-musl
      FEATURES: default-musl
      CARGO_TERM_COLOR: always
    volumes:
      - $PWD:$PWD
      - ./target/x86_64-unknown-linux-musl/cargo/registry:/opt/rust/cargo/registry
      - ./target/x86_64-unknown-linux-musl/cargo/git:/opt/rust/cargo/git
      - ./target/x86_64-unknown-linux-musl/rustup/tmp:/opt/rust/rustup/tmp
    working_dir: $PWD
    user: $USER
    command: scripts/build.sh

  build-x86_64-unknown-linux-gnu:
    build:
      context: .
      dockerfile: scripts/ci-docker-images/builder-x86_64-unknown-linux-gnu/Dockerfile
      args:
        USER: $USER
    environment:
      NATIVE_BUILD: "false"
      TARGET: x86_64-unknown-linux-gnu
      FEATURES: default
      CARGO_TERM_COLOR: always
    volumes:
      - $PWD:$PWD
      - ./target/x86_64-unknown-linux-gnu/cargo/registry:/usr/local/cargo/registry
      - ./target/x86_64-unknown-linux-gnu/cargo/git:/usr/local/cargo/git
      - ./target/x86_64-unknown-linux-gnu/rustup/tmp:/usr/local/rustup/tmp
    working_dir: $PWD
    user: $USER
    command: scripts/build.sh

  build-aarch64-unknown-linux-musl:
    build:
      context: .
      dockerfile: scripts/ci-docker-images/builder-aarch64-unknown-linux-musl/Dockerfile
    environment:
      NATIVE_BUILD: "false"
      TARGET: aarch64-unknown-linux-musl
      FEATURES: default-musl
      CARGO_TERM_COLOR: always
    volumes:
      - $PWD:$PWD
      - ./target/aarch64-unknown-linux-musl/cargo/registry:/opt/rust/cargo/registry
      - ./target/aarch64-unknown-linux-musl/cargo/git:/opt/rust/cargo/git
      - ./target/aarch64-unknown-linux-musl/rustup/tmp:/opt/rust/rustup/tmp
    working_dir: $PWD
    user: $USER
    command: scripts/build.sh

  package-archive-x86_64-unknown-linux-musl:
    build:
      context: .
      dockerfile: scripts/ci-docker-images/builder-x86_64-unknown-linux-musl/Dockerfile
    environment:
      NATIVE_BUILD: "false"
      TARGET: x86_64-unknown-linux-musl
      FEATURES: default-musl
      CARGO_TERM_COLOR: always
    volumes:
      - $PWD:$PWD
      - ./target/x86_64-unknown-linux-musl/cargo/registry:/opt/rust/cargo/registry
      - ./target/x86_64-unknown-linux-musl/cargo/git:/opt/rust/cargo/git
      - ./target/x86_64-unknown-linux-musl/rustup/tmp:/opt/rust/rustup/tmp
    working_dir: $PWD
    user: $USER
    command: ./scripts/package-archive.sh

  package-archive-x86_64-unknown-linux-gnu:
    build:
      context: .
      dockerfile: scripts/ci-docker-images/builder-x86_64-unknown-linux-gnu/Dockerfile
      args:
        USER: $USER
    environment:
      NATIVE_BUILD: "false"
      TARGET: x86_64-unknown-linux-gnu
      FEATURES: ""
      CARGO_TERM_COLOR: always
    volumes:
      - $PWD:$PWD
      - ./target/x86_64-unknown-linux-gnu/cargo/registry:/usr/local/cargo/registry
      - ./target/x86_64-unknown-linux-gnu/cargo/git:/usr/local/cargo/git
      - ./target/x86_64-unknown-linux-gnu/rustup/tmp:/usr/local/rustup/tmp
    working_dir: $PWD
    user: $USER
    command: ./scripts/package-archive.sh

  package-archive-aarch64-unknown-linux-musl:
    build:
      context: .
      dockerfile: scripts/ci-docker-images/builder-aarch64-unknown-linux-musl/Dockerfile
    environment:
      NATIVE_BUILD: "false"
      TARGET: aarch64-unknown-linux-musl
      FEATURES: default-musl
      CARGO_TERM_COLOR: always
    volumes:
      - $PWD:$PWD
      - ./target/aarch64-unknown-linux-musl/cargo/registry:/opt/rust/cargo/registry
      - ./target/aarch64-unknown-linux-musl/cargo/git:/opt/rust/cargo/git
      - ./target/aarch64-unknown-linux-musl/rustup/tmp:/opt/rust/rustup/tmp
    working_dir: $PWD
    user: $USER
    command: ./scripts/package-archive.sh

  package-deb-x86_64:
    build:
      context: .
      dockerfile: scripts/ci-docker-images/builder-x86_64-unknown-linux-gnu/Dockerfile
      args:
        USER: $USER
    environment:
      TARGET: x86_64-unknown-linux-gnu
    volumes:
      - $PWD:$PWD
      - ./target/x86_64-unknown-linux-gnu/cargo/registry:/usr/local/cargo/registry
      - ./target/x86_64-unknown-linux-gnu/cargo/git:/usr/local/cargo/git
      - ./target/x86_64-unknown-linux-gnu/rustup/tmp:/usr/local/rustup/tmp
    working_dir: $PWD
    user: $USER
    command: ./scripts/package-deb.sh

  package-deb-aarch64:
    build:
      context: .
      dockerfile: scripts/ci-docker-images/builder-aarch64-unknown-linux-musl/Dockerfile
    environment:
      TARGET: aarch64-unknown-linux-musl
    volumes:
      - $PWD:$PWD
      - ./target/aarch64-unknown-linux-musl/cargo/registry:/opt/rust/cargo/registry
      - ./target/aarch64-unknown-linux-musl/cargo/git:/opt/rust/cargo/git
      - ./target/aarch64-unknown-linux-musl/rustup/tmp:/opt/rust/rustup/tmp
    working_dir: $PWD
    user: $USER
    command: ./scripts/package-deb.sh

  package-rpm-x86_64:
    build:
      context: .
      dockerfile: scripts/ci-docker-images/packager-rpm/Dockerfile
    environment:
      TARGET: x86_64-unknown-linux-gnu
    volumes:
      - $PWD:$PWD
    working_dir: $PWD
    user: $USER
    command: ./scripts/package-rpm.sh

  package-rpm-aarch64:
    build:
      context: .
      dockerfile: scripts/ci-docker-images/packager-rpm/Dockerfile
    environment:
      TARGET: aarch64-unknown-linux-musl
    volumes:
      - $PWD:$PWD
    working_dir: $PWD
    user: $USER
    command: ./scripts/package-rpm.sh

  verify-rpm-amazonlinux-1:
    build:
      context: .
      dockerfile: scripts/ci-docker-images/verifier-amazonlinux-1/Dockerfile
    volumes:
      - $PWD:$PWD
    working_dir: $PWD
    command:
      ["sh", "-ec", "rpm -i target/artifacts/*-x86_64.rpm && vector --version"]

  verify-rpm-amazonlinux-2:
    build:
      context: .
      dockerfile: scripts/ci-docker-images/verifier-amazonlinux-2/Dockerfile
    volumes:
      - $PWD:$PWD
    working_dir: $PWD
    command:
      ["sh", "-ec", "rpm -i target/artifacts/*-x86_64.rpm && vector --version"]

  verify-rpm-centos-7:
    build:
      context: .
      dockerfile: scripts/ci-docker-images/verifier-centos-7/Dockerfile
    volumes:
      - $PWD:$PWD
    working_dir: $PWD
    command:
      ["sh", "-ec", "rpm -i target/artifacts/*-x86_64.rpm && vector --version"]

  verify-deb-artifact-on-deb-8:
    build:
      context: .
      dockerfile: scripts/ci-docker-images/verifier-deb-8/Dockerfile
    volumes:
      - $PWD:$PWD
    working_dir: $PWD
    command:
      ["sh", "-ec", "dpkg -i target/artifacts/*-amd64.deb && vector --version"]

  verify-deb-artifact-on-deb-9:
    build:
      context: .
      dockerfile: scripts/ci-docker-images/verifier-deb-9/Dockerfile
    volumes:
      - $PWD:$PWD
    working_dir: $PWD
    command:
      ["sh", "-ec", "dpkg -i target/artifacts/*-amd64.deb && vector --version"]

  verify-deb-artifact-on-deb-10:
    build:
      context: .
      dockerfile: scripts/ci-docker-images/verifier-deb-10/Dockerfile
    volumes:
      - $PWD:$PWD
    working_dir: $PWD
    command:
      ["sh", "-ec", "dpkg -i target/artifacts/*-amd64.deb && vector --version"]

  verify-deb-artifact-on-ubuntu-14-04:
    build:
      context: .
      dockerfile: scripts/ci-docker-images/verifier-ubuntu-14-04/Dockerfile
    volumes:
      - $PWD:$PWD
    working_dir: $PWD
    command:
      ["sh", "-ec", "dpkg -i target/artifacts/*-amd64.deb && vector --version"]

  verify-deb-artifact-on-ubuntu-16-04:
    build:
      context: .
      dockerfile: scripts/ci-docker-images/verifier-ubuntu-16-04/Dockerfile
    volumes:
      - $PWD:$PWD
    working_dir: $PWD
    command:
      ["sh", "-ec", "dpkg -i target/artifacts/*-amd64.deb && vector --version"]

  verify-deb-artifact-on-ubuntu-18-04:
    build:
      context: .
      dockerfile: scripts/ci-docker-images/verifier-ubuntu-18-04/Dockerfile
    volumes:
      - $PWD:$PWD
    working_dir: $PWD
    command:
      ["sh", "-ec", "dpkg -i target/artifacts/*-amd64.deb && vector --version"]

  verify-deb-artifact-on-ubuntu-20-04:
    build:
      context: .
      dockerfile: scripts/ci-docker-images/verifier-ubuntu-20-04/Dockerfile
    volumes:
      - $PWD:$PWD
    working_dir: $PWD
    command:
      ["sh", "-ec", "dpkg -i target/artifacts/*-amd64.deb && vector --version"]

  verify-nixos:
    build:
      context: .
      dockerfile: scripts/ci-docker-images/verifier-nixos/Dockerfile
    volumes:
      - $PWD:$PWD
    working_dir: $PWD
    command: ["sh", "-ec", "./scripts/verify-nix.sh && vector --version"]

  target-graph:
    build:
      context: .
      dockerfile: scripts/ci-docker-images/target-graph/Dockerfile
    volumes:
      - $PWD:$PWD
    working_dir: $PWD
    user: $USER
    entrypoint: ./scripts/target-graph.sh

  load-qemu-binfmt:
    build:
      context: .
      dockerfile: scripts/ci-docker-images/loader-qemu-binfmt/Dockerfile
    privileged: true
    command: dpkg-reconfigure qemu-user-binfmt
