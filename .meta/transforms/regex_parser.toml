[transforms.regex_parser]
allow_you_to_description = """\
parse a log field's value with a [Regular Expression][urls.regex]\
"""
function_categories = ["parse"]
guides = []
input_types = ["log"]
output_types = ["log"]
resources = []
types_coercion = true

[transforms.regex_parser.options.drop_field]
type = "bool"
default = true
null = false
description = "If the specified `field` should be dropped (removed) after parsing."

[transforms.regex_parser.options.field]
type = "string"
default = "message"
null = false
description = "The log field to parse."

[transforms.regex_parser.options.regex]
type = "string"
examples = [

"""\
^(?P<timestamp>.*) (?P<level>\\w*) (?P<message>.*)$\
"""
]
null = false
description = """\
The Regular Expression to apply. Do not inlcude the leading or trailing `/`.\
"""

[[transforms.regex_parser.resources]]
name = "Regex Tester"
short_link = "regex_tester"

[[transforms.regex_parser.resources]]
name = "Rust Regex Syntax"
short_link = "rust_regex_syntax"