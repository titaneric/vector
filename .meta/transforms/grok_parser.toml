[transforms.grok_parser]
allow_you_to_description = "parse a log field value with [Grok][urls.grok]"
function_categories = ["parse"]
guides = []
input_types = ["log"]
output_types = ["log"]
resources = [
  {name = "Grok Debugger", short_link = "grok_debugger"},
  {name = "Grok Patterns", short_link = "grok_patterns"}
]

[transforms.grok_parser.options.drop_field]
type = "bool"
default = true
null = false
description = """\
If `true` will drop the specified `field` after parsing.\
"""

[transforms.grok_parser.options.field]
type = "string"
default = "message"
null = false
description = """\
The log field to execute the `pattern` against. Must be a `string` value.\
"""

[transforms.grok_parser.options.pattern]
type = "string"
examples = ["%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:level} %{GREEDYDATA:message}"]
null = false
description = "The [Grok pattern][urls.grok_patterns]"

[transforms.grok_parser.options.types]
type = "table"
null = true
description = "Key/Value pairs representing mapped log field types."

[transforms.grok_parser.options.types.options."*"]
type = "string"
enum = ["string", "int", "float", "bool", "timestamp|strftime"]
examples = [
  {name = "status", value = "int"},
  {name = "duration", value = "float"},
  {name = "success", value = "bool"},
  {name = "timestamp", value = "timestamp|%s", comment = "unix"},
  {name = "timestamp", value = "timestamp|%+", comment = "iso8601 (date and time)"},
  {name = "timestamp", value = "timestamp|%F", comment = "iso8601 (date)"},
  {name = "timestamp", value = "timestamp|%a %b %e %T %Y", comment = "custom strftime format"},
]
null = false
description = """\
A definition of mapped log field types. They key is the log field name and \
the value is the type. [`strftime` specifiers][urls.strftime_specifiers] are \
supported for the `timestamp` type.\
"""