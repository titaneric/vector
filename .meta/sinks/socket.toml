[sinks.socket]
title = "Socket"
beta = false
common = true
delivery_guarantee = "best_effort"
egress_method = "streaming"
function_category = "transmit"
healthcheck = true
input_types = ["log"]
requirements = {}
write_to_description = "a socket, such as a TCP or Unix domain socket"

<%= render("_partials/_component_options.toml", type: "sink", name: "socket") %>

<%= render("_partials/_buffer_options.toml", namespace: "sinks.socket.options") %>

[sinks.socket.options.encoding]
type = "string"
category = "requests"
common = true
required = true
description = """\
The encoding format used to serialize the events before outputting.\
"""

[sinks.socket.options.encoding.enum]
json = "Each event is encoded into JSON."
text = "Each event is encoded into text via the `message` key."

[sinks.socket.options.mode]
type = "string"
common = true
required = true
description = "The type of socket to use."

[sinks.socket.options.mode.enum]
tcp = "TCP Socket."
unix = "Unix Domain Socket."

[sinks.socket.options.address]
type = "string"
common = true
examples = ["92.12.333.224:5000"]
required = true
relevant_when = {mode = "tcp"}
description = "The address to connect to. The address _must_ include a port."

[sinks.socket.options.path]
type = "string"
common = true
examples = ["/path/to/socket"]
required = true
relevant_when = {mode = "unix"}
description = """The unix socket path. This should be the absolute path.\
"""

<%= render("_partials/_tls_options.toml", namespace: "sinks.socket.options", can_enable: true, can_verify: true) %>

