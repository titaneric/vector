[sinks.aws_cloudwatch_logs]
title = "AWS Cloudwatch Logs"
batch_max_events = 1049000
batch_timeout_secs = 1
beta = true
buffer = true
common = true
delivery_guarantee = "at_least_once"
egress_method = "batching"
function_category = "transmit"
encodings = ["json", "text"]
healthcheck = true
input_types = ["log"]
request_rate_limit_duration_secs = 1
request_rate_limit_num =5
request_retry_attempts = 5
request_retry_initial_backoff_secs = 1
request_retry_max_duration_secs = 10
request_in_flight_limit = 5
request_timeout_secs = 30
service_limits_short_link = "aws_cw_logs_service_limits"
service_providers = ["AWS"]
write_to_description = "[Amazon Web Service's CloudWatch Logs service][urls.aws_cw_logs] via the [`PutLogEvents` API endpoint](https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutLogEvents.html)"

[sinks.aws_cloudwatch_logs.options.group_name]
type = "string"
common = true
examples = [
  "{{ file }}",
  "ec2/{{ instance_id }}",
  "group-name"
]
required = true
partition_key = true
templateable = true
description = "The [group name][urls.aws_cw_logs_group_name] of the target CloudWatch Logs stream."

[sinks.aws_cloudwatch_logs.options.stream_name]
type = "string"
common = true
examples = [
  "{{ instance_id }}",
  "%Y-%m-%d",
  "stream-name"
]
required = true
partition_key = true
templateable = true
description = "The [stream name][urls.aws_cw_logs_stream_name] of the target CloudWatch Logs stream."

[sinks.aws_cloudwatch_logs.options.create_missing_group]
type = "bool"
common = true
default = true
description = """\
Dynamically create a [log group][urls.aws_cw_logs_group_name] if it does not already exist. This will ignore \
`create_missing_stream` directly after creating the group and will create the first stream.\
"""

[sinks.aws_cloudwatch_logs.options.create_missing_stream]
type = "bool"
common = true
default = true
description = "Dynamically create a [log stream][urls.aws_cw_logs_stream_name] if it does not already exist."

[sinks.aws_cloudwatch_logs.options.assume_role]
type = "string"
common = false
examples = ["arn:aws:iam::123456789098:role/my_role"]
required = false
description = "The ARN of an [IAM role][urls.aws_iam_role] to assume at startup."

[[sinks.aws_cloudwatch_logs.output.examples]]
label = "Generic"
body = """\
```http
POST / HTTP/1.1
Host: logs.<region>.<domain>
X-Amz-Date: <date>
Accept: application/json
Content-Type: application/x-amz-json-1.1
Content-Length: <byte_size>
Connection: Keep-Alive
X-Amz-Target: Logs_20140328.PutLogEvents

{
  "logGroupName": "<group_name>",
  "logStreamName": "<stream_name>",
  "logEvents": [
    {
      "timestamp": <log_timestamp>,
      "message": "<json_encoded_log>"
    },
    {
      "timestamp": <log_timestamp>,
      "message": "<json_encoded_log>"
    },
    {
      "timestamp": <log_timestamp>,
      "message": "<json_encoded_log>"
    }
  ]
}
```\
"""
