name: Test Suite

on:
  push:
    branches:
      - master
    paths:
      - ".github/workflows/tests.yml"
      - "lib/**"
      - "proto/**"
      - "scripts/**"
      - "skaffold/**"
      - "src/**"
      - "tests/**"
      - "Cargo.lock"
      - "Cargo.toml"
      - "docker-compose.yml"
      - "Makefile"
      - "rust-toolchain"
  pull_request:
    paths:
      - ".github/workflows/tests.yml"
      - "lib/**"
      - "proto/**"
      - "scripts/**"
      - "skaffold/**"
      - "src/**"
      - "tests/**"
      - "Cargo.lock"
      - "Cargo.toml"
      - "docker-compose.yml"
      - "Makefile"
      - "rust-toolchain"

env:
  VERBOSE: true
  RUST_TEST_THREADS: 1
  TEST_LOG: vector=debug
  RUST_BACKTRACE: full
  AWS_ACCESS_KEY_ID: "dummy"
  AWS_SECRET_ACCESS_KEY: "dummy"

jobs:
  cancel-previous:
    name: Cancel redundant jobs
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - uses: styfle/cancel-workflow-action@0.4.1
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

  test-linux:
    name: Unit - Linux
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: sudo bash scripts/environment/bootstrap-ubuntu-20.04.sh
      - run: bash scripts/environment/prepare.sh
      - run: make slim-builds
      - run: make test

  test-mac:
    name: Unit - Mac
    # Full CI suites for this platform were only recently introduced.
    # Some failures are permitted until we can properly correct them.
    continue-on-error: true
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: bash scripts/environment/bootstrap-macos-10.sh
      - run: bash scripts/environment/prepare.sh
      - run: make slim-builds
      - run: make test

  test-windows:
    name: Unit - Windows
    # Full CI suites for this platform were only recently introduced.
    # Some failures are permitted until we can properly correct them.
    continue-on-error: true
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1
      - env:
          USE_CONTAINER: none
          RUSTFLAGS: "-D warnings"
        run: cargo test --no-default-features --features default-msvc

  test-misc:
    name: Shutdown - Linux
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: sudo bash scripts/environment/bootstrap-ubuntu-20.04.sh
      - run: bash scripts/environment/prepare.sh
      - run: make slim-builds
      - run: make test-shutdown
      - run: make test-cli
      - run: make test-behavior

  test-integration-aws:
    name: Integration - Linux, AWS
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: sudo bash scripts/environment/bootstrap-ubuntu-20.04.sh
      - run: bash scripts/environment/prepare.sh
      - run: make slim-builds
      - run: make test-integration-aws

  test-integration-clickhouse:
    name: Integration - Linux, Clickhouse
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: sudo bash scripts/environment/bootstrap-ubuntu-20.04.sh
      - run: bash scripts/environment/prepare.sh
      - run: make slim-builds
      - run: make test-integration-clickhouse

  test-integration-docker:
    name: Integration - Linux, Docker
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: sudo bash scripts/environment/bootstrap-ubuntu-20.04.sh
      - run: bash scripts/environment/prepare.sh
      - run: make slim-builds
      - run: make test-integration-docker

  test-integration-elasticsearch:
    name: Integration - Linux, ES
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: sudo bash scripts/environment/bootstrap-ubuntu-20.04.sh
      - run: bash scripts/environment/prepare.sh
      - run: make slim-builds
      - run: make test-integration-elasticsearch

  test-integration-gcp:
    name: Integration - Linux, GCP
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: sudo bash scripts/environment/bootstrap-ubuntu-20.04.sh
      - run: bash scripts/environment/prepare.sh
      - run: make slim-builds
      - run: make test-integration-gcp

  test-integration-influxdb:
    name: Integration - Linux, Influx
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: sudo bash scripts/environment/bootstrap-ubuntu-20.04.sh
      - run: bash scripts/environment/prepare.sh
      - run: make slim-builds
      - run: make test-integration-influxdb

  test-integration-kafka:
    name: Integration - Linux, Kafka
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: sudo bash scripts/environment/bootstrap-ubuntu-20.04.sh
      - run: bash scripts/environment/prepare.sh
      - run: make slim-builds
      - run: make test-integration-kafka

  test-integration-loki:
    name: Integration - Linux, Loki
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: sudo bash scripts/environment/bootstrap-ubuntu-20.04.sh
      - run: bash scripts/environment/prepare.sh
      - run: make slim-builds
      - run: make test-integration-loki

  test-integration-pulsar:
    name: Integration - Linux, Pulsar
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: sudo bash scripts/environment/bootstrap-ubuntu-20.04.sh
      - run: bash scripts/environment/prepare.sh
      - run: make slim-builds
      - run: make test-integration-pulsar

  test-integration-splunk:
    name: Integration - Linux, Splunk
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: sudo bash scripts/environment/bootstrap-ubuntu-20.04.sh
      - run: bash scripts/environment/prepare.sh
      - run: make slim-builds
      - run: make test-integration-splunk

  test-e2e-kubernetes:
    name: E2E - K8s ${{ matrix.kubernetes_version }} / ${{ matrix.container_runtime }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        minikube_version:
          - "v1.11.0" # https://github.com/kubernetes/minikube/issues/8799
        kubernetes_version:
          - "v1.18.6"
          # TODO: https://github.com/timberio/vector/issues/3338
          #- "v1.17.9"
          #- "v1.16.12" # v1.16.13 is broken, see https://github.com/kubernetes/minikube/issues/8840
          #- "v1.15.12"
          - "v1.14.10"
        container_runtime:
          - docker
          - containerd
          - crio
      fail-fast: false
    steps:
      - name: Setup Minikube
        run: |
          set -xeuo pipefail

          curl -Lo kubectl \
            'https://storage.googleapis.com/kubernetes-release/release/${{ matrix.kubernetes_version }}/bin/linux/amd64/kubectl'
          sudo install kubectl /usr/local/bin/

          curl -Lo minikube \
            'https://storage.googleapis.com/minikube/releases/${{ matrix.minikube_version }}/minikube-linux-amd64'
          sudo install minikube /usr/local/bin/

          minikube config set profile minikube
          minikube config set vm-driver docker
          minikube config set kubernetes-version '${{ matrix.kubernetes_version }}'
          minikube config set container-runtime '${{ matrix.container_runtime }}'
          # Start minikube, try again once if fails and print logs if the second
          # attempt fails too.
          minikube start || minikube delete && minikube start || minikube logs
          kubectl cluster-info
      - name: Checkout
        uses: actions/checkout@v1
      - run: USE_CONTAINER=none make slim-builds
      - run: make test-e2e-kubernetes
        env:
          USE_MINIKUBE_CACHE: "true"
          PACKAGE_DEB_USE_CONTAINER: docker
