# Soak test vector
#
# This workflow runs our 'soak' tests, which are relative evaluations of the
# base SHA for the PR to whatever SHA was just pushed into the project (unless
# that SHA happens to be master branch HEAD). The goal is to give quick-ish
# feedback on all-up vector for a variety of configs as to whether throughput
# performance has gone down, gotten more variable in the pushed SHA.
#
# Soaks are always done relative to the pushed SHA, meaning any changes you
# introduce to the soak tests will be picked up both for the base SHA soak and
# your current SHA. Tags are SHA-SHA. The first SHA is the one that triggered
# this workflow, the second is the one of the vector being tested. For
# comparison images the two SHAs are identical.
name: Soak

on:
  pull_request:
    paths-ignore:
      - "docs/**"
      - "rfcs/**"
      - "website/**"

jobs:
  cancel-previous:
    runs-on: ubuntu-20.04
    timeout-minutes: 3
    if: github.ref != 'refs/heads/master'
    steps:
      - uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}
          all_but_latest: true # can cancel workflows scheduled later

  compute-soak-meta:
    name: Compute metadata for soaks
    runs-on: ubuntu-20.04
    outputs:
      pr-number: ${{ steps.pr-metadata.outputs.PR_NUMBER }}
      comparison-sha: ${{ steps.comparison.outputs.COMPARISON_SHA }}
      comparison-tag: ${{ steps.comparison.outputs.COMPARISON_TAG }}
      baseline-sha: ${{ steps.baseline.outputs.BASELINE_SHA }}
      baseline-tag: ${{ steps.baseline.outputs.BASELINE_TAG }}
      vector-cpus: ${{ steps.system.outputs.VECTOR_CPUS }}
      soak-cpus: ${{ steps.system.outputs.SOAK_CPUS }}
      soak-memory: ${{ steps.system.outputs.SOAK_MEMORY }}
    steps:
      - uses: actions/checkout@v2.3.5
        with:
          ref: ${{ github.base_ref }}
          path: baseline-vector

      - name: Report on PR metadata
        id: pr-metadata
        run: |
          export PR_NUMBER=${{ github.event.number }}
          echo "::set-output name=PR_NUMBER::${PR_NUMBER}"
          echo "PR number: ${PR_NUMBER}"

      - name: Setup comparison variables
        id: comparison
        run: |
          export COMPARISON_SHA=${{ github.event.pull_request.head.sha }}
          export COMPARISON_TAG="${{ github.event.pull_request.head.sha }}-${{ github.event.pull_request.head.sha }}"

          echo "comparison sha is: ${COMPARISON_SHA}"
          echo "comparison tag is: ${COMPARISON_TAG}"

          echo "::set-output name=COMPARISON_TAG::${COMPARISON_TAG}"
          echo "::set-output name=COMPARISON_SHA::${COMPARISON_SHA}"

      - name: Setup baseline variables
        id: baseline
        run: |
          pushd baseline-vector
          export BASELINE_SHA=$(git rev-parse HEAD)
          popd

          export BASELINE_TAG="${{ github.event.pull_request.head.sha }}-${BASELINE_SHA}"
          echo "baseline sha is: ${BASELINE_SHA}"
          echo "baseline tag is: ${BASELINE_TAG}"

          echo "::set-output name=BASELINE_TAG::${BASELINE_TAG}"
          echo "::set-output name=BASELINE_SHA::${BASELINE_SHA}"

      - name: Setup system details
        id: system
        run: |
          export SOAK_CPUS="7"
          export SOAK_MEMORY="30g"
          export VECTOR_CPUS="4"

          echo "soak cpus total: ${SOAK_CPUS}"
          echo "soak memory total: ${SOAK_MEMORY}"
          echo "vector cpus: ${VECTOR_CPUS}"

          echo "::set-output name=SOAK_CPUS::${SOAK_CPUS}"
          echo "::set-output name=SOAK_MEMORY::${SOAK_MEMORY}"
          echo "::set-output name=VECTOR_CPUS::${VECTOR_CPUS}"

  compute-test-plan:
    name: Compute soak test plan
    runs-on: ubuntu-20.04
    needs: [compute-soak-meta]
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - uses: actions/github-script@v5
        id: set-matrix
        with:
          script: |
            const fs = require('fs')
            target = fs.readdirSync('soaks/tests') // read names of directories in soaks/tests into an array

            // Create the matrix that will be used as the strategy for soak test image builds and experiments
            //
            // Each field of this object has an array of elements that will be
            // cartesian producted across the others to generate the full list of
            // jobs to run. For example, the first job might have the values:
            // { target: "fluent_remap_aws_firehose", replica: 1, variant: { name: "baseline", tag: "f0e229dab15e2cd554924d9db7731c8f8f030ec3-405f4a464db1ce386ba66ce7582a0d4e47c1d5d9"}
            const matrix = {
              target: target, // run each experiment
              replica: [1, 2], // run twice
              // run each experiment twice, once for the baseline, once for the comparison
              variant: [
                {
                  name: "baseline",
                  tag: "${{ needs.compute-soak-meta.outputs.baseline-tag }}",
                },
                {
                  name: "comparison",
                  tag: "${{ needs.compute-soak-meta.outputs.comparison-tag }}",
                },
              ],
            }

            // export this variable to be available to other github steps
            core.setOutput('matrix', matrix)
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(steps.set-matrix.outputs.matrix) }}
        run: echo "$MATRIX_CONTEXT"

  build-image:
    name: Build ${{ matrix.variant.name }} 'soak-vector' container
    runs-on: [self-hosted, linux, x64, general]
    needs: [compute-soak-meta]
    strategy:
      matrix:
        variant:
          - name: baseline
            tag: "${{ needs.compute-soak-meta.outputs.baseline-tag }}"
            ref: "${{ needs.compute-soak-meta.outputs.baseline-sha }}"
          - name: comparison
            tag: "${{ needs.compute-soak-meta.outputs.comparison-tag }}"
            ref: "${{ needs.compute-soak-meta.outputs.comparison-sha }}"
    steps:
      - uses: colpal/actions-clean@v1

      - uses: actions/checkout@v2.3.5

      - uses: actions/checkout@v2.3.5
        with:
          ref: ${{ matrix.variant.ref }}
          path: ${{ matrix.variant.name }}-vector

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to the Container registry
        uses: docker/login-action@v1.12.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@e5622373a38e60fb6d795a4421e56882f2d7a681
        with:
          flavor: |
            latest=false
            prefix=
            suffix=
          images: ghcr.io/${{ github.repository }}/soak-vector
          tags: type=raw, value=${{ matrix.variant.tag }}

      - name: Build and push 'soak-vector' image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ${{matrix.variant.name}}-vector/
          file: soaks/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha, scope=${{ github.workflow }}
          cache-to: type=gha, scope=${{ github.workflow }}

  soak:
    name: Soak (${{ matrix.target }}) - ${{ matrix.variant.name }} - replica ${{ matrix.replica }}
    if: ${{ github.actor != 'dependabot[bot]' }}
    runs-on: [self-hosted, linux, x64, soak]
    needs: [compute-soak-meta, compute-test-plan, build-image]
    strategy:
      matrix: ${{ fromJson(needs.compute-test-plan.outputs.matrix) }}
    steps:
      - uses: colpal/actions-clean@v1

      - name: Check out the repo
        uses: actions/checkout@v2.4.0

      - name: Run ${{ matrix.variant.name }} experiment
        run: |
          rm -rf /tmp/${{ github.event.number }}-${{ github.run_attempt }}/
          mkdir -p /tmp/${{ github.event.number }}-${{ github.run_attempt }}/${{ matrix.target }}/
          ./soaks/bin/soak_one.sh --soak ${{ matrix.target }} \
                                  --local-image "false" \
                                  --variant ${{ matrix.variant.name }} \
                                  --tag ${{ matrix.variant.tag }} \
                                  --cpus ${{ needs.compute-soak-meta.outputs.soak-cpus }} \
                                  --memory ${{ needs.compute-soak-meta.outputs.soak-memory }} \
                                  --vector-cpus ${{ needs.compute-soak-meta.outputs.vector-cpus }} \
                                  --capture-dir /tmp/${{ github.event.number }}-${{ github.run_attempt }} \
                                  --warmup-seconds 30

      - name: Upload timing captures
        uses: actions/upload-artifact@v1
        with:
          name: ${{ github.event.number }}-${{ github.run_attempt }}-${{ matrix.target }}-replica_${{ matrix.replica }}-${{ matrix.variant.name }}
          path: /tmp/${{ github.event.number }}-${{ github.run_attempt }}/${{ matrix.target }}/${{ matrix.variant.name }}.captures

      - name: Clear up unused images
        run: |
          minikube delete --all --purge
          docker system prune --all --volumes --force

  analyze-results:
    name: Soak analysis
    if: ${{ github.actor != 'dependabot[bot]' }}
    runs-on: ubuntu-20.04
    needs:
      - compute-soak-meta
      - soak

    steps:
      - name: Set up Python3
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install scipy==1.7.*
          pip install pandas==1.3.*
          pip install tabulate==0.8.*

      - name: Check out the repo
        uses: actions/checkout@v2.4.0

      - name: Download captures artifact
        uses: actions/download-artifact@v2
        with:
          path: ${{ github.event.number }}-${{ github.run_attempt }}-captures/

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: ${{ github.event.number }}-${{ github.run_attempt }}-captures/

      - name: Analyze captures
        run: |
          ./soaks/bin/analyze_experiment --capture-dir ${{ github.event.number }}-${{ github.run_attempt }}-captures/ \
                                         --baseline-sha ${{ needs.compute-soak-meta.outputs.baseline-sha }} \
                                         --comparison-sha ${{ needs.compute-soak-meta.outputs.comparison-sha }} \
                                         --vector-cpus ${{ needs.compute-soak-meta.outputs.vector-cpus }} \
                                         --warmup-seconds 30 --erratic-soaks syslog_loki,http_to_http_acks \
                                         --p-value 0.1 > /tmp/${{ github.event.number}}-${{ github.run_attempt }}-analysis

      - name: Read analysis file
        id: read-analysis
        uses: juliangruber/read-file-action@v1
        with:
          path: /tmp/${{ github.event.number }}-${{ github.run_attempt }}-analysis

      - name: Post Results To PR
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ needs.compute-soak-meta.outputs.pr-number }}
          edit-mode: replace
          body: ${{ steps.read-analysis.outputs.content }}

  detect-regressions:
    name: Regression analysis
    if: ${{ github.actor != 'dependabot[bot]' }}
    runs-on: ubuntu-20.04
    needs:
      - compute-soak-meta
      - soak

    steps:
      - name: Set up Python3
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install scipy==1.7.*
          pip install pandas==1.3.*
          pip install tabulate==0.8.*

      - name: Check out the repo
        uses: actions/checkout@v2.4.0

      - name: Download captures artifact
        uses: actions/download-artifact@v2
        with:
          path: ${{ github.event.number }}-${{ github.run_attempt }}-captures/

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: ${{ github.event.number }}-${{ github.run_attempt }}-captures/

      - name: Detect regressions
        run: |
          ./soaks/bin/detect_regressions --capture-dir ${{ github.event.number }}-${{ github.run_attempt }}-captures/ \
                                         --warmup-seconds 30 --erratic-soaks syslog_loki,http_to_http_acks \
                                         --p-value 0.1
