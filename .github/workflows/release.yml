name: Release Suite

on:
  push:
    tags:
      - v0.*
      - v1.*

jobs:
  build-x86_64-unknown-linux-musl-packages:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - env:
          PASS_FEATURES: "default-cmake"
        run: make package-x86_64-unknown-linux-musl-all
      - uses: actions/upload-artifact@v1
        with:
          name: "vector-x86_64-unknown-linux-musl.tar.gz"
          path: "./target/artifacts/vector-x86_64-unknown-linux-musl.tar.gz"

  build-x86_64-unknown-linux-gnu-packages:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - env:
          PASS_FEATURES: "default"
        run: make package-x86_64-unknown-linux-gnu-all
      - uses: actions/upload-artifact@v1
        with:
          name: "vector-x86_64-unknown-linux-gnu.tar.gz"
          path: "./target/artifacts/vector-x86_64-unknown-linux-gnu.tar.gz"
      - uses: actions/upload-artifact@v1
        with:
          name: "vector-amd64.deb"
          path: "./target/artifacts/vector-amd64.deb"
      - uses: actions/upload-artifact@v1
        with:
          name: "vector-x86_64.rpm"
          path: "./target/artifacts/vector-x86_64.rpm"

  build-aarch64-unknown-linux-musl-packages:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - env:
          DOCKER_PRIVILEGED: "true"
          PASS_FEATURES: "default-cmake"
        run: make package-aarch64-unknown-linux-musl-all
      - uses: actions/upload-artifact@v1
        with:
          name: "vector-aarch64-unknown-linux-musl.tar.gz"
          path: "./target/artifacts/vector-aarch64-unknown-linux-musl.tar.gz"
      - uses: actions/upload-artifact@v1
        with:
          name: "vector-arm64.deb"
          path: "./target/artifacts/vector-arm64.deb"
      - uses: actions/upload-artifact@v1
        with:
          name: "vector-aarch64.rpm"
          path: "./target/artifacts/vector-aarch64.rpm"

  build-x86_64-apple-darwin-packages:
    runs-on: macos-10.15
    steps:
      - uses: actions/checkout@v1
      - name: "Upgrade bash"
        run: brew install bash
      - name: "Install realpath dependency"
        run: brew install coreutils
      - name: "Build archive"
        env:
          TARGET: "x86_64-apple-darwin"
          NATIVE_BUILD: true
        run: |
          export PATH="$HOME/.cargo/bin:$PATH"
          make package-archive
      - uses: actions/upload-artifact@v1
        with:
          name: "vector-x86_64-apple-darwin.tar.gz"
          path: "./target/artifacts/vector-x86_64-apple-darwin.tar.gz"

  build-x86_64-pc-windows-msvc-packages:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v1
      - name: "Build archive"
        shell: bash
        run: |
          export RUSTFLAGS=-Ctarget-feature=+crt-static
          export FEATURES="default-msvc"
          export ARCHIVE_TYPE="zip"
          export KEEP_SYMBOLS="true"
          export RUST_LTO=""
          export TARGET="x86_64-pc-windows-msvc"
          export NATIVE_BUILD="true"
          make package-archive
      - name: "Build package"
        shell: bash
        run: |
          export PATH="/c/wix:$PATH"
          ./scripts/package-msi.sh
      - uses: actions/upload-artifact@v1
        with:
          name: "vector-x86_64-pc-windows-msvc.zip"
          path: "./target/artifacts/vector-x86_64-pc-windows-msvc.zip"
      - uses: actions/upload-artifact@v1
        with:
          name: "vector-x64.msi"
          path: "./target/artifacts/vector-x64.msi"

  release-docker:
    runs-on: ubuntu-latest
    needs:
      - build-x86_64-unknown-linux-musl-packages
      - build-aarch64-unknown-linux-musl-packages
    steps:
      - uses: actions/checkout@v1
      - uses: actions/download-artifact@v1
        with:
          name: vector-x86_64-unknown-linux-musl.tar.gz
          path: target/artifacts
      - uses: actions/download-artifact@v1
        with:
          name: vector-aarch64-unknown-linux-musl.tar.gz
          path: target/artifacts
      - uses: actions/download-artifact@v1
        with:
          name: vector-amd64.deb
          path: target/artifacts
      - uses: actions/download-artifact@v1
        with:
          name: vector-arm64.deb
          path: target/artifacts
      - env:
          DOCKER_USERNAME: "${{ secrets.CI_DOCKER_USERNAME }}"
          DOCKER_PASSWORD: "${{ secrets.CI_DOCKER_PASSWORD }}"
          PLATFORM: "linux/amd64,linux/arm64,linux/arm"
        run: |
          ./scripts/upgrade-docker.sh
          export VERSION=$(make version)
          make release-docker

  release-s3:
    runs-on: ubuntu-latest
    needs:
      - build-x86_64-unknown-linux-gnu-packages
      - build-x86_64-unknown-linux-musl-packages
      - build-aarch64-unknown-linux-musl-packages
      - build-x86_64-apple-darwin-packages
      - build-x86_64-pc-windows-msvc-packages
    steps:
      - uses: actions/checkout@v1
      - uses: actions/download-artifact@v1
        with:
          name: vector-x86_64-unknown-linux-gnu.tar.gz
          path: target/artifacts
      - uses: actions/download-artifact@v1
        with:
          name: vector-x86_64-unknown-linux-musl.tar.gz
          path: target/artifacts
      - uses: actions/download-artifact@v1
        with:
          name: vector-aarch64-unknown-linux-musl.tar.gz
          path: target/artifacts
      - uses: actions/download-artifact@v1
        with:
          name: vector-amd64.deb
          path: target/artifacts
      - uses: actions/download-artifact@v1
        with:
          name: vector-arm64.deb
          path: target/artifacts
      - uses: actions/download-artifact@v1
        with:
          name: vector-x86_64-apple-darwin.tar.gz
          path: target/artifacts
      - uses: actions/download-artifact@v1
        with:
          name: vector-x86_64-pc-windows-msvc.zip
          path: target/artifacts
      - uses: actions/download-artifact@v1
        with:
          name: vector-x64.msi
          path: target/artifacts
      - uses: actions/download-artifact@v1
        with:
          name: vector-x86_64.rpm
          path: target/artifacts
      - uses: actions/download-artifact@v1
        with:
          name: vector-aarch64.rpm
          path: target/artifacts
      - env:
          AWS_ACCESS_KEY_ID: "${{ secrets.CI_AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets.CI_AWS_SECRET_ACCESS_KEY }}"
        run: make release-s3

  release-github:
    runs-on: ubuntu-20.04
    needs:
      - build-x86_64-unknown-linux-gnu-packages
      - build-x86_64-unknown-linux-musl-packages
      - build-aarch64-unknown-linux-musl-packages
      - build-x86_64-apple-darwin-packages
      - build-x86_64-pc-windows-msvc-packages
    steps:
      - uses: actions/checkout@v1
      - uses: actions/download-artifact@v1
        with:
          name: vector-x86_64-unknown-linux-gnu.tar.gz
          path: target/artifacts
      - uses: actions/download-artifact@v1
        with:
          name: vector-x86_64-unknown-linux-musl.tar.gz
          path: target/artifacts
      - uses: actions/download-artifact@v1
        with:
          name: vector-aarch64-unknown-linux-musl.tar.gz
          path: target/artifacts
      - uses: actions/download-artifact@v1
        with:
          name: vector-amd64.deb
          path: target/artifacts
      - uses: actions/download-artifact@v1
        with:
          name: vector-arm64.deb
          path: target/artifacts
      - uses: actions/download-artifact@v1
        with:
          name: vector-x86_64-apple-darwin.tar.gz
          path: target/artifacts
      - uses: actions/download-artifact@v1
        with:
          name: vector-x86_64-pc-windows-msvc.zip
          path: target/artifacts
      - uses: actions/download-artifact@v1
        with:
          name: vector-x64.msi
          path: target/artifacts
      - uses: actions/download-artifact@v1
        with:
          name: vector-x86_64.rpm
          path: target/artifacts
      - uses: actions/download-artifact@v1
        with:
          name: vector-aarch64.rpm
          path: target/artifacts
      - run: sudo bash scripts/environment/bootstrap-ubuntu-20.04.sh
      - run: bash scripts/environment/prepare.sh
      - run: |
          export VERSION=$(make version)
          export SHA1="${{ github.sha }}"
          export GITHUB_TOKEN="${{ secrets.GITHUB_TOKEN }}"
          make release-github

  release-homebrew:
    runs-on: ubuntu-20.04
    needs:
      - build-x86_64-unknown-linux-gnu-packages
      - build-x86_64-unknown-linux-musl-packages
      - build-aarch64-unknown-linux-musl-packages
      - build-x86_64-apple-darwin-packages
      - build-x86_64-pc-windows-msvc-packages
    steps:
      - uses: actions/checkout@v1
      - uses: actions/download-artifact@v1
        with:
          name: vector-x86_64-unknown-linux-gnu.tar.gz
          path: target/artifacts
      - uses: actions/download-artifact@v1
        with:
          name: vector-x86_64-unknown-linux-musl.tar.gz
          path: target/artifacts
      - uses: actions/download-artifact@v1
        with:
          name: vector-aarch64-unknown-linux-musl.tar.gz
          path: target/artifacts
      - uses: actions/download-artifact@v1
        with:
          name: vector-amd64.deb
          path: target/artifacts
      - uses: actions/download-artifact@v1
        with:
          name: vector-arm64.deb
          path: target/artifacts
      - uses: actions/download-artifact@v1
        with:
          name: vector-x86_64-apple-darwin.tar.gz
          path: target/artifacts
      - uses: actions/download-artifact@v1
        with:
          name: vector-x86_64-pc-windows-msvc.zip
          path: target/artifacts
      - uses: actions/download-artifact@v1
        with:
          name: vector-x64.msi
          path: target/artifacts
      - uses: actions/download-artifact@v1
        with:
          name: vector-x86_64.rpm
          path: target/artifacts
      - uses: actions/download-artifact@v1
        with:
          name: vector-aarch64.rpm
          path: target/artifacts
      - run: sudo bash scripts/environment/bootstrap-ubuntu-20.04.sh
      - run: bash scripts/environment/prepare.sh
      - run: |
          export VERSION=$(make version)
          export GITHUB_TOKEN="${{ secrets.GH_PACKAGE_PUBLISHER_TOKEN }}"
          make release-homebrew

  release-helm:
    runs-on: ubuntu-latest
    needs:
      # This is not strictly required, but ensures that Helm Chart doesn't
      # appear before the image it refers to.
      - release-docker
    steps:
      - uses: actions/checkout@v1
      - name: Install Helm
        run: scripts/ci-setup-helm.sh
      - name: Release Helm Chart
        env:
          AWS_ACCESS_KEY_ID: "${{ secrets.CI_AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets.CI_AWS_SECRET_ACCESS_KEY }}"
        run: make release-helm
