name: Master Test Suite

on:
  push:
    branches:
      - master
    paths:
      - ".github/workflows/master.yml"
      - ".cargo/**"
      - "benches/**"
      - "lib/**"
      - "proto/**"
      - "scripts/**"
      - "skaffold/**"
      - "src/**"
      - "tests/**"
      - "build.rs"
      - "Cargo.lock"
      - "Cargo.toml"
      - "Makefile"
      - "rust-toolchain"
  workflow_dispatch:

env:
  AUTOINSTALL: true
  AWS_ACCESS_KEY_ID: "dummy"
  AWS_SECRET_ACCESS_KEY: "dummy"
  CONTAINER_TOOL: "docker"
  RUST_BACKTRACE: full
  RUST_TEST_THREADS: 1
  TEST_LOG: vector=debug
  VERBOSE: true
  CI: true
  PROFILE: debug

jobs:
  cancel-previous:
    name: Cancel redundant jobs
    runs-on: ubuntu-20.04
    timeout-minutes: 3
    if: github.ref != 'refs/heads/master'
    steps:
      - uses: styfle/cancel-workflow-action@0.5.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

  cross-linux:
    name: Cross - ${{ matrix.target }}
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-gnu
          - aarch64-unknown-linux-musl
    # We run cross checks when dependencies change to ensure they still build.
    # This helps us avoid adopting dependencies that aren't compatible with other architectures.
    steps:
      - uses: actions/checkout@v2
      - run: make ci-sweep
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: sudo bash scripts/environment/bootstrap-ubuntu-20.04.sh
      - run: bash scripts/environment/prepare.sh
      - run: echo "::add-matcher::.github/matchers/rust.json"
      - run: make slim-builds
      # Why is this build, not check? Because we need to make sure the linking phase works.
      # aarch64 and musl in particular are notoriously hard to link.
      # While it may be tempting to slot a `check` in here for quickness, please don't.
      - run: make cross-build-${{ matrix.target }}
      - uses: actions/upload-artifact@v2
        with:
          name: "vector-debug-${{ matrix.target }}"
          path: "./target/${{ matrix.target }}/debug/vector"

  # Remove this once https://github.com/timberio/vector/issues/3771 is closed.
  # Then, modify the `cross-linux` job to run `test` instead of `build`.
  test-linux:
    name: Unit - x86_64-unknown-linux-gnu
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: make ci-sweep
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: sudo bash scripts/environment/bootstrap-ubuntu-20.04.sh
      - run: bash scripts/environment/prepare.sh
      - run: echo "::add-matcher::.github/matchers/rust.json"
      - run: make slim-builds
      - run: make test

  test-mac:
    name: Unit - Mac
    # Full CI suites for this platform were only recently introduced.
    # Some failures are permitted until we can properly correct them.
    continue-on-error: true
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: bash scripts/environment/bootstrap-macos-10.sh
      - run: bash scripts/environment/prepare.sh
      - run: echo "::add-matcher::.github/matchers/rust.json"
      - run: make slim-builds
      - run: make test

  test-windows:
    name: Unit - Windows
    # Full CI suites for this platform were only recently introduced.
    # Some failures are permitted until we can properly correct them.
    continue-on-error: true
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - env:
          RUSTFLAGS: "-D warnings"
        run: cargo test --no-fail-fast --no-default-features --features default-msvc

  test-misc:
    name: Shutdown - Linux
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: make ci-sweep
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: sudo bash scripts/environment/bootstrap-ubuntu-20.04.sh
      - run: bash scripts/environment/prepare.sh
      - run: echo "::add-matcher::.github/matchers/rust.json"
      - run: make slim-builds
      - run: make test-shutdown
      - run: make test-cli
      - run: make test-behavior

  test-integration-aws:
    name: Integration - Linux, AWS
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: make ci-sweep
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: sudo bash scripts/environment/bootstrap-ubuntu-20.04.sh
      - run: bash scripts/environment/prepare.sh
      - run: echo "::add-matcher::.github/matchers/rust.json"
      - run: make slim-builds
      - run: make test-integration-aws

  test-integration-clickhouse:
    name: Integration - Linux, Clickhouse
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: make ci-sweep
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: sudo bash scripts/environment/bootstrap-ubuntu-20.04.sh
      - run: bash scripts/environment/prepare.sh
      - run: make slim-builds
      - run: make test-integration-clickhouse

  test-integration-docker:
    name: Integration - Linux, Docker
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: make ci-sweep
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: sudo bash scripts/environment/bootstrap-ubuntu-20.04.sh
      - run: bash scripts/environment/prepare.sh
      - run: echo "::add-matcher::.github/matchers/rust.json"
      - run: make slim-builds
      - run: make test-integration-docker

  test-integration-elasticsearch:
    name: Integration - Linux, ES
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: make ci-sweep
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: sudo bash scripts/environment/bootstrap-ubuntu-20.04.sh
      - run: bash scripts/environment/prepare.sh
      - run: echo "::add-matcher::.github/matchers/rust.json"
      - run: make slim-builds
      - run: make test-integration-elasticsearch

  test-integration-gcp:
    name: Integration - Linux, GCP
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: make ci-sweep
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: sudo bash scripts/environment/bootstrap-ubuntu-20.04.sh
      - run: bash scripts/environment/prepare.sh
      - run: echo "::add-matcher::.github/matchers/rust.json"
      - run: make slim-builds
      - run: make test-integration-gcp

  test-integration-humio:
    name: Integration - Linux, Humio
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: make ci-sweep
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: sudo bash scripts/environment/bootstrap-ubuntu-20.04.sh
      - run: bash scripts/environment/prepare.sh
      - run: echo "::add-matcher::.github/matchers/rust.json"
      - run: make slim-builds
      - run: make test-integration-humio

  test-integration-influxdb:
    name: Integration - Linux, Influx
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: make ci-sweep
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: sudo bash scripts/environment/bootstrap-ubuntu-20.04.sh
      - run: bash scripts/environment/prepare.sh
      - run: echo "::add-matcher::.github/matchers/rust.json"
      - run: make slim-builds
      - run: make test-integration-influxdb

  test-integration-kafka:
    name: Integration - Linux, Kafka
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: make ci-sweep
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: sudo bash scripts/environment/bootstrap-ubuntu-20.04.sh
      - run: bash scripts/environment/prepare.sh
      - run: echo "::add-matcher::.github/matchers/rust.json"
      - run: make slim-builds
      - run: make test-integration-kafka

  test-integration-loki:
    name: Integration - Linux, Loki
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: make ci-sweep
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: sudo bash scripts/environment/bootstrap-ubuntu-20.04.sh
      - run: bash scripts/environment/prepare.sh
      - run: echo "::add-matcher::.github/matchers/rust.json"
      - run: make slim-builds
      - run: make test-integration-loki

  test-integration-pulsar:
    name: Integration - Linux, Pulsar
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: make ci-sweep
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: sudo bash scripts/environment/bootstrap-ubuntu-20.04.sh
      - run: bash scripts/environment/prepare.sh
      - run: echo "::add-matcher::.github/matchers/rust.json"
      - run: make slim-builds
      - run: make test-integration-pulsar

  test-integration-splunk:
    name: Integration - Linux, Splunk
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: make ci-sweep
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: sudo bash scripts/environment/bootstrap-ubuntu-20.04.sh
      - run: bash scripts/environment/prepare.sh
      - run: echo "::add-matcher::.github/matchers/rust.json"
      - run: make slim-builds
      - run: make test-integration-splunk

  check-component-features:
    name: Component Features - Linux
    runs-on: ubuntu-20.04
    container: timberio/ci_image
    steps:
      - uses: actions/checkout@v2
      - run: echo "::add-matcher::.github/matchers/rust.json"
      - run: make slim-builds
      - run: echo "home/runner/.local/bin" >> "$GITHUB_PATH"
      - run: make check-component-features

  master-failure:
    name: master-failure
    if: failure()
    needs:
      - cancel-previous
      - cross-linux
      - test-linux
      - test-mac
      - test-windows
      - test-misc
      - test-integration-aws
      - test-integration-clickhouse
      - test-integration-docker
      - test-integration-elasticsearch
      - test-integration-gcp
      - test-integration-humio
      - test-integration-influxdb
      - test-integration-kafka
      - test-integration-loki
      - test-integration-pulsar
      - test-integration-splunk
      - check-component-features
    runs-on: ubuntu-latest
    steps:
    - name: Discord notification
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      uses: Ilshidur/action-discord@0.3.0
      with:
        args: "Master failed and is red: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}"
