<%- component = metadata.sinks.aws_s3 -%>

<%= component_header(component) %>

## Configuration

<%= component_config_example(component) %>

<%- if !component.requirements.nil? -%>
## Requirements

<Alert type="danger" fill={true} icon={false}>

<%= component.requirements %>

</Alert>

<%- end -%>
## Options

<%= options(component.specific_options_list, heading_depth: 3) %>

<%- if component.env_vars_list.any? -%>
## Env Vars

<%= options(component.env_vars_list, heading_depth: 3) %>

<%- end -%>
<%- if component.output -%>
## Output

<%= component_output(component, component.output) %>

<%- end -%>
## How It Works [[sort]]

<%= component_sections(component) %>

### Object Naming

By default, Vector will name your S3 objects in the following format:

<Tabs
  block={true}
  defaultValue="without_compression"
  values={[
    { label: 'Without Compression', value: 'without_compression', },
    { label: 'With Compression', value: 'with_compression', },
  ]
}>

<TabItem value="without_compression">

```
<key_prefix><timestamp>-<uuidv4>.log
```

For example:

```
date=2019-06-18/1560886634-fddd7a0e-fad9-4f7e-9bce-00ae5debc563.log
```

</TabItem>
<TabItem value="with_compression">

```
<key_prefix><timestamp>-<uuidv4>.log.gz
```

For example:

```
date=2019-06-18/1560886634-fddd7a0e-fad9-4f7e-9bce-00ae5debc563.log.gz
```

</TabItem>
</Tabs>

Vector appends a [UUIDV4][urls.uuidv4] token to ensure there are no name
conflicts in the unlikely event 2 Vector instances are writing data at the same
time.

You can control the resulting name via the `key_prefix`, `filename_time_format`,
and `filename_append_uuid` options.


