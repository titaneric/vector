<%- component = metadata.sources.syslog -%>

<%= component_header(component) %>

## Configuration

<%= component_config_example(component) %>

## Options

<%= options(component.specific_options_list, heading_depth: 3) %>

<%- if component.env_vars_list.any? -%>
## Env Vars

<%= options(component.env_vars_list, heading_depth: 3) %>

<%- end -%>
<%- if component.output.log -%>
## Output

<%= component_output(component, component.output.log, heading_depth: 3) %>

<%- end -%>
## How It Works [[sort]]

<%= component_sections(component) %>

### Line Delimiters

Each line is read until a new line delimiter (the `0xA` byte) is found.

### Parsing

Vector will _only_ parse messages in the [Syslog 5424 format][urls.syslog_5424],
Vector will _not_ parse the [Syslog 3164 format][urls.syslog_3164] since 3164
is not an exact specification, but an observation of behavior.

Vector makes a _best effort_ to parse the Syslog 5424 format. If parsing
fails, the event will be dropped and `warning` log line will be emitted. If
this is the case, we recommend using the [`socket` source][docs.sources.socket]
combined with the [`regex_parser` transform][docs.transforms.regex_parser] to
implement your own ingestion and parsing scheme.
