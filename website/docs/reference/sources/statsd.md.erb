<%- component = metadata.sources.statsd -%>

<%= component_header(component) %>

<%- if component.requirements.any? -%>
## Requirements

<%= component_requirements(component) %>

<%- end -%>
## Configuration

<%= component_config_example(component) %>

<%= fields(component.specific_options_list, heading_depth: 3) %>

<%- if component.env_vars_list.any? -%>
## Env Vars

<%= fields(component.env_vars_list, heading_depth: 3) %>

<%- end -%>
## Output

<%= component_output(component, component.output.metric, heading_depth: 3) %>

## How It Works [[sort]]

<%= component_sections(component) %>

### Timestamp

StatsD protocol does not provide support for sending metric timestamps. You'll
notice that each parsed metric is assigned a `null` timestamp, which is a
special value which means "a real time metric" (not historical one). Normally such
`null` timestamps will be substituted by current time by downstream sinks or
3rd party services during sending/ingestion. See the [metric][docs.data-model.metric]
data model page for more info.


