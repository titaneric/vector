---
title: Unit Tests
description: Vector's unit test configuration options, allowing you to unit test your Vector configuration files.
status: beta
---

It's possible to define unit tests within a Vector configuration file that cover
a network of transforms within the topology. The intention of these tests is to
improve the maintainability of configs containing larger and more complex
combinations of transforms.

Executing tests within a config file can be done with the `test` subcommand:

```bash
vector test /etc/vector/*.toml
```

## Configuration

<Tabs
  block={true}
  defaultValue="common"
  values={[
    { label: 'Common', value: 'common', },
    { label: 'Advanced', value: 'advanced', },
  ]
}>

<TabItem value="common">

<CodeHeader fileName="vector.toml" />

```toml
[transforms.bar]
  type = "regex_parser"
  regex = "^(?P<timestamp>[\\w\\-:\\+]+) (?P<level>\\w+) (?P<message>.*)$"

<%= config_example(metadata.testing.tests.options_list, path: "tests", array: true, common: true) %>
```

</TabItem>
<TabItem value="advanced">

<CodeHeader fileName="vector.toml" />

```toml
[transforms.bar]
  type = "regex_parser"
  regex = "^(?P<timestamp>[\\w\\-:\\+]+) (?P<level>\\w+) (?P<message>.*)$"

<%= config_example(metadata.testing.tests.options_list, path: "tests", array: true, common: false) %>
```

</TabItem>

</Tabs>

For more information about unit tests check out [this guide][docs.setup.guides.unit-testing].

## Options

<%= options(metadata.testing.tests.options_list, heading_depth: 3) %>
