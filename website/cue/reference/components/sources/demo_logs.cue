package metadata

components: sources: demo_logs: {
	title: "Demo Logs"

	alias: "generator"

	description: """
		Generates fakes events useful for testing and demoing.
		"""

	classes: {
		commonly_used: false
		delivery:      "at_least_once"
		deployment_roles: ["daemon", "sidecar"]
		development:   "stable"
		egress_method: "stream"
		stateful:      false
	}

	features: {
		auto_generated:   true
		acknowledgements: false
		multiline: enabled: false
		codecs: {
			enabled:         true
			default_framing: "bytes"
		}
		generate: {}
	}

	support: {
		requirements: []
		warnings: []
		notices: []
	}

	installation: {
		platform_name: null
	}

	configuration: base.components.sources.demo_logs.configuration

	output: {
		logs: line: {
			description: "An individual event from a batch of events generated by vector for testing purposes."
			fields: {
				source_type: {
					description: "The name of the source type."
					required:    true
					type: string: {
						examples: ["demo_logs"]
					}
				}
			}
		}
	}

	telemetry: metrics: {
		component_errors_total:               components.sources.internal_metrics.output.metrics.component_errors_total
		component_discarded_events_total:     components.sources.internal_metrics.output.metrics.component_discarded_events_total
		component_received_bytes_total:       components.sources.internal_metrics.output.metrics.component_received_bytes_total
		component_received_events_total:      components.sources.internal_metrics.output.metrics.component_received_events_total
		component_received_event_bytes_total: components.sources.internal_metrics.output.metrics.component_received_event_bytes_total
		processed_events_total:               components.sources.internal_metrics.output.metrics.processed_events_total
	}
}
