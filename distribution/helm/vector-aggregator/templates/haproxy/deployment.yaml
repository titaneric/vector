{{- if .Values.haproxy.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "haproxy.fullname" . }}
  labels:
    {{- include "haproxy.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.haproxy.replicaCount }}
  selector:
    matchLabels:
      {{- include "haproxy.selectorLabels" . | nindent 6 }}
  {{- with .Values.haproxy.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "haproxy.selectorLabels" . | nindent 8 }}
        {{- if .Values.haproxy.podLabels }}
{{ toYaml .Values.haproxy.podLabels | indent 8 }}
        {{- end }}
      annotations:
        checksum/environment: {{ include (print $.Template.BasePath "/haproxy/configmap.yaml") . | sha256sum }}
      {{- if .Values.haproxy.podAnnotations }}
{{ toYaml .Values.haproxy.podAnnotations | indent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ include "libvector.serviceAccountName" . }}-haproxy
      terminationGracePeriodSeconds: {{ .Values.haproxy.terminationGracePeriodSeconds }}
      securityContext:
        {{- toYaml .Values.haproxy.podSecurityContext | nindent 8 }}
      {{- include "libvector.imagePullSecrets" . | indent 6 }}
{{- if .Values.haproxy.priorityClassName }}
      priorityClassName: {{ .Values.haproxy.priorityClassName }}
{{- end }}
      volumes:
        - name: haproxy-config
          configMap:
            name: {{ include "libvector.fullname" . }}-haproxy
        {{- range $mountedSecret := .Values.haproxy.mountedSecrets }}
        - name: {{ $mountedSecret.volumeName }}
          secret:
            secretName: {{ $mountedSecret.secretName }}
        {{- end }}
        {{- with.Values.haproxy.extraVolumes }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      containers:
        - name: haproxy
          {{- if .Values.haproxy.securityContext.enabled }}
          securityContext:
            runAsUser: {{ .Values.haproxy.securityContext.runAsUser }}
            runAsGroup: {{ .Values.haproxy.securityContext.runAsGroup }}
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
          {{- end }}
          image: "{{ .Values.haproxy.image.repository }}:{{ .Values.haproxy.image.tag }}"
          imagePullPolicy: {{ .Values.haproxy.image.pullPolicy }}
          args:
            - -f
            - /usr/local/etc/haproxy/haproxy.cfg
          ports:
          {{- range $key, $value := .Values.haproxy.containerPorts }}
            - name: {{ $key }}
              containerPort: {{ $value }}
              protocol: TCP
          {{- end }}
          resources:
            {{- toYaml .Values.haproxy.resources | nindent 12 }}
          volumeMounts:
            - name: haproxy-config
              mountPath: /usr/local/etc/haproxy
            {{- with.Values.haproxy.extraVolumeMounts }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- range $mountedSecret := .Values.haproxy.mountedSecrets }}
            - name: {{ $mountedSecret.volumeName }}
              mountPath: {{ $mountedSecret.mountPath }}
            {{- end }}
      {{- with.Values.haproxy.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.haproxy.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.haproxy.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.haproxy.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
