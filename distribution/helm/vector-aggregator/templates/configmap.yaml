{{- if (empty .Values.existingConfigMap) -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "libvector.configMapName" . }}
  labels:
    {{- include "libvector.labels" . | nindent 4 }}
data:
  # We leave `vector.toml` file name available to let externally managed config
  # maps to provide it.
  managed.toml: |
    {{- include "libvector.vectorConfigHeader" . | nindent 4 -}}

    {{- with .Values.vectorSource }}
    {{- if .enabled }}
    # Accept logs from Vector agents.
    {{- $value := merge (dict) .config -}}
    {{- $_ := set $value "type" "vector" -}}
    {{- $_ := set $value "address" (printf "%v:%v" .listenAddress .listenPort) -}}
    {{- $_ := set $value "rawConfig" .rawConfig -}}
    {{- tuple .sourceId $value | include "libvector.vectorSourceConfig" | nindent 4 -}}
    {{- end }}
    {{- end }}

    {{- include "libvector.metricsConfigPartial" . | nindent 4  }}

    {{- include "libvector.vectorTopology" .Values | nindent 4 -}}

{{- end }}
