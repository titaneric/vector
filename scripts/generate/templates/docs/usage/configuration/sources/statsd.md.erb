<% component = metadata.sources.statsd %>

<%= component_header(component) %>

## Config File

<%= component_config_example(component) %>

## Examples

{% tabs %}
{% tab title="Counter" %}
Given the following Statsd counter:

```
login.invocations:1|c
```

A [`metric` event][docs.data-model.metric] will be emitted with the following structure:

{% code-tabs %}
{% code-tabs-item title="metric" %}
```javascript
{
  "counter": {
    "name": "login.invocations",
    "val": 1,
    "timestamp": "2019-05-02T12:22:46.658503Z" // current time / time ingested
  }
}
```
{% endcode-tabs-item %}
{% endcode-tabs %}

{% endtab %}
{% tab title="Gauge" %}
Given the following Statsd gauge:

```
gas_tank:0.50|g
```

A [`metric` event][docs.data-model.metric] will be emitted with the following structure:

{% code-tabs %}
{% code-tabs-item title="metric" %}
```javascript
{
  "gauge": {
    "name": "gas_tank",
    "val": 0.5,
    "timestamp": "2019-05-02T12:22:46.658503Z" // current time / time ingested
  }
}
```
{% endcode-tabs-item %}
{% endcode-tabs %}

{% endtab %}
{% tab title="Set" %}
Given the following Statsd set:

```
unique_users:foo|s
```

A [`metric` event][docs.data-model.metric] will be emitted with the following structure:

{% code-tabs %}
{% code-tabs-item title="metric" %}
```javascript
{
  "set": {
    "name": "unique_users",
    "val": 1,
    "timestamp": "2019-05-02T12:22:46.658503Z" // current time / time ingested
  }
}
```
{% endcode-tabs-item %}
{% endcode-tabs %}

{% endtab %}
{% tab title="Timer" %}
Given the following Statsd timer:

```
login.time:22|ms 
```

A [`metric` event][docs.data-model.metric] will be emitted with the following structure:

{% code-tabs %}
{% code-tabs-item title="metric" %}
```javascript
{
  "timer": {
    "name": "login.time",
    "val": 22,
    "timestamp": "2019-05-02T12:22:46.658503Z" // current time / time ingested
  }
}
```
{% endcode-tabs-item %}
{% endcode-tabs %}

{% endtab %}
{% endtabs %}

## How It Works [[sort]]

<%= component_sections(component) %>

### Timestamp

You'll notice that each metric contains a `timestamp` field. This is an optional
descriptive field that represents when the metric was received. It helps to
more closely represent the metric's time in situations here it can be used. See
the [metric][docs.data-model.metric] data model page for more info.

## Troubleshooting

<%= component_troubleshooting(component) %>

## Resources

<%= component_resources(component) %>