version: "3"

services:
  postgres:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: axiom
      POSTGRES_PASSWORD: axiom
    volumes:
      - postgres_data:/var/lib/postgresql/data
  axiom-db:
    image: axiomhq/axiom-db:latest
    restart: unless-stopped
    environment:
      AXIOM_STORAGE: "file:///data"
      AXIOM_POSTGRES_URL: "postgres://axiom:axiom@postgres?sslmode=disable&connect_timeout=5"
    depends_on:
      - postgres
  axiom-core:
    image: axiomhq/axiom-core:latest
    restart: unless-stopped
    environment:
      AXIOM_POSTGRES_URL: "postgres://axiom:axiom@postgres?sslmode=disable&connect_timeout=5"
      AXIOM_DB_URL: "http://axiom-db:8080"
      AXIOM_HTTP_PORT: "80"
    depends_on:
      - axiom-db
    ports:
      - 8081:80
  runner:
    build:
      context: ${PWD}
      dockerfile: scripts/integration/Dockerfile
      args:
        - RUST_VERSION=${RUST_VERSION}
    working_dir: /code
    command:
      - "cargo"
      - "nextest"
      - "run"
      - "--no-fail-fast"
      - "--no-default-features"
      - "--features"
      - "axiom-integration-tests"
      - "--lib"
      - "sinks::axiom::"
      - "--"
      - "--nocapture"
    environment:
      - AXIOM_URL=http://axiom-core
    depends_on:
      - axiom-core
      - axiom-db
    volumes:
      - ${PWD}:/code
      - cargogit:/usr/local/cargo/git
      - cargoregistry:/usr/local/cargo/registry

volumes:
  cargogit: {}
  cargoregistry: {}
  postgres_data: {}
